{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["MatrixBackground","_ref","show","children","canvasRef","useRef","useEffect","canvas","current","context","getContext","resizeCanvas","width","window","innerWidth","height","innerHeight","addEventListener","alphabet","katakana","columns","rainDrops","Array","Math","floor","fill","interval","setInterval","draw","fillStyle","fillRect","font","fontSize","i","length","text","charAt","random","fillText","clearInterval","removeEventListener","React","createElement","Fragment","ref","style","position","top","left","opacity","transition","Console","_ref2","onComplete","lines","setLines","useState","currentCommand","setCurrentCommand","isTyping","setIsTyping","commandIndexRef","isRunningCommandRef","consoleCommands","command","output","sleep","ms","Promise","resolve","setTimeout","runNextCommand","async","prev","typeCommand","type","right","fontFamily","color","textAlign","map","line","index","key","marginBottom","className","Banner","_ref3","timer","clearTimeout","transform","fontWeight","textShadow","animation","border","padding","boxShadow","BusinessCard","_ref4","currentWordIndex","setCurrentWordIndex","currentText","setCurrentText","isDeleting","setIsDeleting","typingSpeed","setTypingSpeed","isWaiting","setIsWaiting","styles","container","zIndex","backgroundColor","backdropFilter","WebkitBackdropFilter","borderRadius","heading","margin","paragraph","lineHeight","minHeight","buttonContainer","display","justifyContent","gap","flexWrap","button","background","cursor","alignItems","textDecoration","typingWords","word","prevIndex","timeout","prevText","slice","handleLinkClick","url","e","preventDefault","open","href","onClick","Github","size","Send","App","stage","setStage","handleConsoleComplete","handleBannerComplete","jsx","global","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.88b8ae1b.chunk.js","sourcesContent":["import { Github, Send } from 'lucide-react'\nimport React, { useEffect, useRef, useState } from 'react'\n\nconst MatrixBackground = ({ show, children }) => {\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n    if (!show) return\n\n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth\n      canvas.height = window.innerHeight\n    }\n\n    window.addEventListener('resize', resizeCanvas)\n    resizeCanvas()\n\n    const katakana =\n      'アァカサタナハマヤャラワガザダバパイィキシチニヒミリヰギジヂビピウゥクスツヌフムユュルグズブヅプエェケセテネヘメレヱゲゼデベペオォコソトノホモヨョロヲゴゾドボポヴッン'\n    const latin = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    const nums = '0123456789'\n    const alphabet = katakana + latin + nums\n\n    const fontSize = 16\n    const columns = canvas.width / fontSize\n\n    const rainDrops = Array(Math.floor(columns)).fill(1)\n\n    const draw = () => {\n      context.fillStyle = 'rgba(0, 0, 0, 0.05)'\n      context.fillRect(0, 0, canvas.width, canvas.height)\n\n      context.fillStyle = '#0F0'\n      context.font = fontSize + 'px monospace'\n\n      for (let i = 0; i < rainDrops.length; i++) {\n        const text = alphabet.charAt(\n          Math.floor(Math.random() * alphabet.length),\n        )\n        context.fillText(text, i * fontSize, rainDrops[i] * fontSize)\n\n        if (rainDrops[i] * fontSize > canvas.height && Math.random() > 0.975) {\n          rainDrops[i] = 0\n        }\n        rainDrops[i]++\n      }\n    }\n\n    const interval = setInterval(draw, 30)\n\n    return () => {\n      clearInterval(interval)\n      window.removeEventListener('resize', resizeCanvas)\n    }\n  }, [show])\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          opacity: show ? 1 : 0,\n          transition: 'opacity 1s ease-in-out',\n        }}\n      />\n      {children}\n    </>\n  )\n}\n\nconst Console = ({ onComplete }) => {\n  const [lines, setLines] = useState([])\n  const [currentCommand, setCurrentCommand] = useState('')\n  const [isTyping, setIsTyping] = useState(false)\n  const commandIndexRef = useRef(0)\n  const isRunningCommandRef = useRef(false)\n\n  const consoleCommands = [\n    {\n      command: 'nmap -sV -p- 192.168.1.1',\n      output:\n        'Starting Nmap scan...\\nPort 22/tcp open  ssh\\nPort 80/tcp open  http\\nPort 443/tcp open  https\\nNmap done: 1 IP address (1 host up) scanned',\n    },\n    {\n      command: 'sqlmap -u \"http://192.168.1.1/login.php\" --forms --batch --dbs',\n      output:\n        \"sqlmap identified the following injection point(s):\\nParameter: username (POST)\\n    Type: boolean-based blind\\n    Title: AND boolean-based blind - WHERE or HAVING clause\\n    Payload: username=admin' AND 1=1--&password=\\n\\navailable databases [2]:\\n[*] information_schema\\n[*] users\",\n    },\n    {\n      command:\n        'hydra -l admin -P /usr/share/wordlists/rockyou.txt 192.168.1.1 ssh',\n      output:\n        '[22][ssh] host: 192.168.1.1   login: admin   password: password123\\n1 of 1 target successfully completed, 1 valid password found',\n    },\n    {\n      command: 'ssh admin@192.168.1.1',\n      output:\n        \"admin@192.168.1.1's password: \\nLast login: Fri Jul 12 10:23:18 2024 from 192.168.1.100\\nadmin@server:~$ \",\n    },\n    {\n      command: 'sudo su',\n      output: '[sudo] password for admin: \\nroot@server:/home/admin# ',\n    },\n    {\n      command: 'cat /etc/shadow',\n      output:\n        'root:$6$tRbL...:19003:0:99999:7:::\\ndaemon:*:18375:0:99999:7:::\\nbin:*:18375:0:99999:7:::\\nsys:*:18375:0:99999:7:::',\n    },\n    {\n      command: 'echo \"Mission accomplished. Exfiltrating data...\"',\n      output: 'Mission accomplished. Exfiltrating data...',\n    },\n  ]\n\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n\n  const typeCommand = async (command) => {\n    setIsTyping(true)\n    for (let i = 0; i < command.length; i++) {\n      await sleep(30)\n      setCurrentCommand((prev) => prev + command[i])\n    }\n    setIsTyping(false)\n  }\n\n  const runNextCommand = async () => {\n    if (isRunningCommandRef.current) return\n    isRunningCommandRef.current = true\n\n    if (commandIndexRef.current >= consoleCommands.length) {\n      onComplete()\n      isRunningCommandRef.current = false\n      return\n    }\n\n    const { command, output } = consoleCommands[commandIndexRef.current]\n\n    setCurrentCommand('')\n    await typeCommand(command)\n    await sleep(500)\n\n    setLines((prev) => [...prev, { type: 'command', text: command }])\n    setCurrentCommand('')\n    await sleep(500)\n\n    setLines((prev) => [...prev, { type: 'output', text: output }])\n    commandIndexRef.current++\n\n    await sleep(1000)\n    isRunningCommandRef.current = false\n    runNextCommand()\n  }\n\n  useEffect(() => {\n    runNextCommand()\n  }, [])\n\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: '20px',\n        left: '20px',\n        right: '20px',\n        fontFamily: \"'Ubuntu Mono', monospace\",\n        fontSize: '14px',\n        color: '#0F0',\n        textAlign: 'left',\n      }}\n    >\n      {lines.map((line, index) => (\n        <div key={index} style={{ marginBottom: '10px' }}>\n          {line.type === 'command' && '> '}\n          <span>{line.text}</span>\n        </div>\n      ))}\n      {currentCommand && (\n        <div>\n          {'> '}\n          <span>{currentCommand}</span>\n          {isTyping && <span className='cursor-blink'>_</span>}\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst Banner = ({ show, onComplete }) => {\n  useEffect(() => {\n    if (show) {\n      const timer = setTimeout(onComplete, 2000)\n      return () => clearTimeout(timer)\n    }\n  }, [show, onComplete])\n\n  if (!show) return null\n\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        fontSize: '48px',\n        fontWeight: 'bold',\n        color: '#0F0',\n        textShadow: '0 0 10px #0F0',\n        animation: 'blink 0.5s infinite alternate',\n        border: '3px solid #0F0',\n        padding: '20px',\n        textAlign: 'center',\n        boxShadow: '0 0 10px #0F0',\n      }}\n    >\n      ACCESS GRANTED\n    </div>\n  )\n}\n\nconst BusinessCard = ({ show }) => {\n  const [currentWordIndex, setCurrentWordIndex] = useState(0)\n  const [currentText, setCurrentText] = useState('')\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [typingSpeed, setTypingSpeed] = useState(53)\n  const [isWaiting, setIsWaiting] = useState(false)\n\n  const styles = {\n    container: {\n      position: 'fixed',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      opacity: show ? 1 : 0,\n      transition: 'opacity 1s ease-in-out',\n      zIndex: 2,\n      textAlign: 'center',\n      padding: 'clamp(1.5rem, 5vw, 2rem)',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      backdropFilter: 'blur(10px)',\n      WebkitBackdropFilter: 'blur(10px)',\n      borderRadius: '20px',\n      width: 'clamp(280px, 90%, 400px)',\n      border: '1px solid rgba(0, 255, 0, 0.3)',\n    },\n    heading: {\n      margin: '0 0 1rem',\n      fontSize: 'clamp(2rem, 7vw, 2.5rem)',\n      fontWeight: '700',\n      color: '#0F0',\n      textShadow: '2px 2px 4px rgba(0,255,0,0.3)',\n      fontFamily: \"'Ubuntu Mono', monospace\",\n    },\n    paragraph: {\n      margin: '0 0 1.5rem',\n      fontSize: 'clamp(1rem, 4vw, 1.2rem)',\n      lineHeight: '1.6',\n      color: '#0F0',\n      textShadow: '1px 1px 2px rgba(0,255,0,0.2)',\n      minHeight: '4.8em',\n      fontFamily: \"'Ubuntu Mono', monospace\",\n    },\n    buttonContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      gap: '1rem',\n      flexWrap: 'wrap',\n    },\n    button: {\n      padding: '0.7rem 1.2rem',\n      borderRadius: '50px',\n      border: 'none',\n      background: 'rgba(0, 255, 0, 0.1)',\n      color: '#0F0',\n      fontSize: 'clamp(1rem, 3.5vw, 1.2rem)',\n      cursor: 'pointer',\n      transition: 'all 0.3s ease',\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.5rem',\n      textDecoration: 'none',\n      fontFamily: \"'Ubuntu Mono', monospace\",\n    },\n  }\n\n  const typingWords = [\n    'neo-nazi banderivets',\n    'motherhacker',\n    'beloved by %undefined%',\n  ]\n\n  useEffect(() => {\n    if (!show) return\n\n    const word = typingWords[currentWordIndex]\n\n    if (!isDeleting && currentText === word) {\n      setIsWaiting(true)\n      setTimeout(() => {\n        setIsWaiting(false)\n        setIsDeleting(true)\n      }, 2000)\n      return\n    }\n\n    if (isDeleting && currentText === '') {\n      setIsWaiting(false)\n      setTimeout(() => {\n        setIsDeleting(false)\n        setCurrentWordIndex((prevIndex) => (prevIndex + 1) % typingWords.length)\n      }, 333)\n      return\n    }\n\n    const timeout = setTimeout(() => {\n      setCurrentText((prevText) => {\n        if (isDeleting) {\n          setTypingSpeed(27)\n          return prevText.slice(0, -1)\n        } else {\n          setTypingSpeed(53)\n          return word.slice(0, prevText.length + 1)\n        }\n      })\n    }, typingSpeed)\n\n    return () => clearTimeout(timeout)\n  }, [\n    currentText,\n    isDeleting,\n    currentWordIndex,\n    typingWords,\n    show,\n    isWaiting,\n    typingSpeed,\n  ])\n\n  const handleLinkClick = (url) => (e) => {\n    e.preventDefault()\n    window.open(url, '_blank', 'noopener,noreferrer')\n  }\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.heading}>imadraude</h1>\n      <p style={styles.paragraph}>\n        {'> '}\n        {currentText}\n        <span className={isWaiting ? 'cursor-blink' : 'cursor-static'}>_</span>\n      </p>\n      <div style={styles.buttonContainer}>\n        <a\n          href='https://github.com/imadraude'\n          onClick={handleLinkClick('https://github.com/imadraude')}\n          style={styles.button}\n          className='hover-glow'\n        >\n          <Github size={24} />\n          GitHub\n        </a>\n        <a\n          href='https://imadraude.t.me'\n          onClick={handleLinkClick('https://imadraude.t.me')}\n          style={styles.button}\n          className='hover-glow'\n        >\n          <Send size={24} />\n          Telegram\n        </a>\n      </div>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [stage, setStage] = useState(0)\n\n  const handleConsoleComplete = () => setStage(1)\n  const handleBannerComplete = () => setStage(2)\n\n  return (\n    <MatrixBackground show={stage >= 2}>\n      {stage === 0 && <Console onComplete={handleConsoleComplete} />}\n      <Banner show={stage === 1} onComplete={handleBannerComplete} />\n      <BusinessCard show={stage === 2} />\n      <style jsx global>{`\n        @import url('https://fonts.googleapis.com/css2?family=Ubuntu+Mono:wght@400;700&display=swap');\n\n        body {\n          margin: 0;\n          padding: 0;\n          background-color: black;\n          overflow: hidden;\n        }\n\n        @keyframes blink {\n          0%,\n          100% {\n            opacity: 1;\n          }\n          50% {\n            opacity: 0;\n          }\n        }\n\n        .cursor-blink {\n          animation: blink 0.7s infinite;\n        }\n\n        .cursor-static {\n          opacity: 1;\n        }\n\n        .hover-glow:hover {\n          background: rgba(0, 255, 0, 0.15) !important;\n          transform: translateY(-2px) !important;\n          box-shadow: 0 0 10px rgba(0, 255, 0, 0.3) !important;\n        }\n\n        @media (max-width: 600px) {\n          .hover-glow:hover {\n            transform: none !;\n          }\n        }\n      `}</style>\n    </MatrixBackground>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)\n\nreportWebVitals()\n"],"sourceRoot":""}